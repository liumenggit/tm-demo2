<template>
  <tm-app ref="app">
    <tm-form @submit="confirm" ref="form" v-model="phoneFrom" :label-width="190" layout="vertical">
      <tm-form-item required label="手机号" :rules="[{required:true,message:'请输入手机号'}]" field="phone"
                    :border="false" showTopErrorGap>
        <tm-input placeholder="请输入手机号" v-model.lazy="phoneFrom.phone" :showBottomBotder="false"
                  prefix="tmicon-mobile-alt"></tm-input>
      </tm-form-item>
      <tm-form-item required label="验证码" :rules="[{required:true,message:'请输入验证码'}]" field="code"
                    :border="false" showTopErrorGap>
        <tm-input placeholder="请输入验证码" @search="sendCode" v-model.lazy="phoneFrom.code" :showBottomBotder="false"
                  prefix="tmicon-ios-finger-print" searchLabel="获取验证码"/>
      </tm-form-item>
      <tm-form-item :border="false">
        <tm-button form-type="submit" label="绑定手机号" block></tm-button>
      </tm-form-item>
    </tm-form>
    <tm-message ref="msg"></tm-message>
  </tm-app>
</template>
<script lang="ts" setup>
import store from '@/store'
import {getCurrentInstance, ref} from "vue";
import {isPhone, toast} from "@/tmui/tool/function/util";
import {phoneCodeSend} from "@/api/AppApi";

const proxy = getCurrentInstance()?.proxy ?? null;
const useUserInfo = store.useUserInfo()
const phoneFrom = ref({
  phone: null,
  code: null
})


function sendCode() {
  if (phoneFrom.value.phone) {
    if (!isPhone(phoneFrom.value.phone as number)) {
      toast('请输入正确的手机号')
    } else {
      phoneCodeSend(phoneFrom.value.phone).then(function (res: any) {
        toast(res.data.msg)
      })
    }
  } else {
    toast('请输入手机号')
  }
}


const confirm = (e: any) => {
  if (e.validate) {
    useUserInfo.setPhone(e.data).then((res: any) => {
      setTimeout(() => {
        uni.navigateBack()
      }, 1300);
    })
  }
}
</script>

<style>
</style>