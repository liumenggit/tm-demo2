<template>
  <tm-app v-model:show-menu="showf" ref="app">
    <template v-slot:menu="{sys}">
      <tm-sheet :margin="[0,0]" :padding="[0,0]" color="indigo" linearDeep="accent" linear="bottom">
        <image class="opacity-1" :style="{width:`${sys.width}px`,height:`${sys.height}px`}"
               :src="`https://picsum.photos/${sys.width}/${sys.height}?id=${Math.random()}`" mode="scaleToFill"/>
        <view class="absolute l-0 t-0" :style="{width:`${sys.width}px`,height:`${sys.height}px`}">
          <view :style="{height:sysinfo.sysinfo.statusBarHeight+'px'}"></view>
          <view class="flex flex-row flex-row-center-between py-24 px-16">
            <tm-text label="TMUI 3.0.88"></tm-text>
            <tm-icon @click="showf=false" color="white" :font-size="32" name="tmicon-times"></tm-icon>
          </view>

          <tm-cell url="/pages/changyong/index" color="primary" :transprent="true" :margin="[10,0]"
                   title="通用组件"></tm-cell>
          <tm-cell url="/pages/layout/index" color="primary" :transprent="true" :margin="[10,0]" title="布局组件">
          </tm-cell>
          <tm-cell url="/pages/showdata/index" color="primary" :transprent="true" :margin="[10,0]"
                   title="展示组件"></tm-cell>
          <tm-cell url="/pages/form/index" color="primary" :transprent="true" :margin="[10,0]" title="表单录入">
          </tm-cell>
        </view>
      </tm-sheet>
    </template>

    <tm-navbar title="白哦题" :shadow="0" hide-home>
      <template v-slot:left>
        <view class="flex flex-center flex-row">
          <tm-icon @click="showf=true" :color="store.tmStore.dark?'primary':''" _class="px-24" :font-size="32"
                   name="tmicon-menu"></tm-icon>
          <navigator url="settheme" class="px-12">
            <tm-icon :font-size="32" name="tmicon-cog-fill"></tm-icon>
          </navigator>
          <tm-icon _class="px-24" @click="onChangeDark" :color="store.tmStore.dark?'yellow':''"
                   :font-size="32" name="tmicon-ios-sunny"></tm-icon>
        </view>
      </template>
    </tm-navbar>
    <tm-sheet :margin="[0, 0]">
      <tm-input :placeholder="language('index.search.tips')" :border="1" showClear prefix="tmicon-search"
                v-model="str" @search='search' :searchLabel="language('index.search.btntext')"></tm-input>
    </tm-sheet>
    <tm-tabs showTabsLineAni :item-width="140" :width="750" :height="2000" default-name="waterfall">
      <tm-tabs-pane name="waterfall" title="瀑布流" :height="2000">
        <!--        <tm-carousel autoplay :margin="[16,16]" :round="3" :width="720" :height="280" :list="listimg"></tm-carousel>-->
        <!--        <tm-grid :col="5">-->
        <!--          <tm-grid-item v-for="item in 10" :height="130">-->
        <!--            <tm-avatar img="https://picsum.photos/200/200" :font-size="80" :round="26"></tm-avatar>-->
        <!--            <tm-text :label="'返送的'+ item" color="grey"></tm-text>-->
        <!--          </tm-grid-item>-->
        <!--        </tm-grid>-->
        <!--        <tm-roll-notice @click="test" list="测试滚动测试滚动测试滚动测试滚动测试滚动"></tm-roll-notice>-->
        <tm-xima @pull-start="pullStart()" :firstLoad="true" :load="getData" :width="750" :height="700"
                 :data="cardList">
          <template v-slot:default="{data}">
            <tm-text :label="data"></tm-text>
          </template>
        </tm-xima>
      </tm-tabs-pane>
      <tm-tabs-pane name="waterfall2" title="瀑布流2" :height="2000">
        <tm-xima :firstLoad="false" :load="getData2" :width="750" :height="700"
                 :data="cardList2">
          <template v-slot:default="{data}">
            <tm-text :label="data"></tm-text>
          </template>
        </tm-xima>
      </tm-tabs-pane>
    </tm-tabs>
  </tm-app>
</template>

<script lang="ts" setup>

import {
  ref,
  getCurrentInstance,
  nextTick,
  inject
} from "vue"
import {
  onShow,
  onLoad,
  onInit
} from "@dcloudio/uni-app";
import {
  language
} from "@/tmui/tool/lib/language"
import {
  useTmpiniaStore
} from '@/tmui/tool/lib/tmpinia';
import tmApp from "@/tmui/components/tm-app/tm-app.vue"
import tmMessage from "@/tmui/components/tm-message/tm-message.vue"
import {contentList} from "@/api/AppApi";

const listimg = ref([
  "https://picsum.photos/720/300",
  "https://picsum.photos/720/300",
  "https://picsum.photos/720/300",
  "https://picsum.photos/720/300",
  "https://picsum.photos/720/300",
])
const cardList = ref([])
const getData = (e: string) => {
  return new Promise((res, rej) => {
    if (e == 'top') {
      cardList.value = []
      contentList({page: 1, limit: 10}).then(function (resu: any) {
        cardList.value = cardList.value.concat(resu.data.list)
        res(true)
      }).catch(function (err: any) {
        res(false)
      })
    } else if (e == 'bottom') {
      contentList({page: 1, limit: 10}).then(function (resu: any) {
        cardList.value = cardList.value.concat(resu.data.list)
        res(true)
      })
    }

  })
}

const cardList2 = ref([])
const getData2 = (e: string) => {
  return new Promise((res, rej) => {
    if (e == 'top') {
      cardList2.value = []
      contentList({page: 1, limit: 10}).then(function (resu: any) {
        cardList2.value = cardList2.value.concat(resu.data.list)
        res(true)
      }).catch(function (err: any) {
        res(false)
      })
    } else if (e == 'bottom') {
      contentList({page: 1, limit: 10}).then(function (resu: any) {
        cardList2.value = cardList2.value.concat(resu.data.list)
        res(true)
      })
    }

  })
}

function pullStart() {
  console.log('pullStart', '下拉时触发')
}

const proxy = getCurrentInstance()?.proxy ?? null;
const store = useTmpiniaStore();
const app = ref<InstanceType<typeof tmApp> | null>(null)
const msg = ref<InstanceType<typeof tmMessage> | null>(null)
const showf = ref(false)
const sysinfo = uni.$tm.u.getWindow()
console.log(sysinfo)
const str = ref("")

function onChangeDark() {
  app.value?.setDark()
}


onLoad(() => {
})
</script>
